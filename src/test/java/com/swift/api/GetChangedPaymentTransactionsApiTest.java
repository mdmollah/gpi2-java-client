/*
 * gpi API
 * Move your app forward with the gpi API
 *
 * OpenAPI spec version: 2.0.2
 * Contact: Li.JIE@swift.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.swift.api;

import static java.util.Arrays.asList;
import static org.mockito.Mockito.mock;
import static org.mockito.Mockito.when;

import java.util.List;

import org.junit.Assert;
import org.junit.Test;

import com.swift.ApiException;
import com.swift.ApiResponse;
import com.swift.model.CamtA0400103;
import com.swift.model.CamtA0400203;
import com.swift.model.GetChangedPaymentTransactionsRequest;

/**
 * API tests for GetChangedPaymentTransactionsApi
 */

public class GetChangedPaymentTransactionsApiTest {

    private final GetChangedPaymentTransactionsApi api = new GetChangedPaymentTransactionsApi();

    
    /**
     * Get Changed Payment Transactions
     *
     * This API is a delta query to get all payment update information starting from a given date and time. This API allows synchronization of a local database with the tracker database.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getChangedPaymentTransactionsPostTest() throws ApiException {
    	GetChangedPaymentTransactionsApi apiInstance = new GetChangedPaymentTransactionsApi();
		String laUApplicationID = "001"; // String | ID that identifies the application generationg the API and used by the gpi Connector to retrieve the related LAU keys
		String laUVersion = "1.0"; // String | version of the LAUSigned header. Mandatory. \"1.0\" for this first release
		String laUCallTime = "2018-03-23T15:56:26.728Z"; // String | timestamp in UTC of the API call in the format YYYY-MM-DDTHH:MM:SS.sssZ
		String laURequestNonce = "e802ab96-bb3a-4965-9139-5214b9f0f074"; // String | a random value generated by the client. Provided with the request and copied by the gpi Connector on the response
		String laUSigned = "(ApplAPIKey=yVGhKiV5z1ZGdaqFXoZ8AiSA9n5CrY6B),(RBACRole=[FullViewer/Scope/cclabeb0])"; // String | service specific HTTP headers
		String laUSignature = "U1khA8h9Lm1PqzB99fG6uw=="; // String | contains the LAU signature, base64 ecoded
		String xApiKey = "yVGhKiV5z1ZGdaqFXoZ8AiSA9n5CrY6B"; // String | An API key given to your application to authenticate against the sandbox URL
		CamtA0400103 requestBody = new CamtA0400103(); // CamtA0400103 | Last Changed Payment Transactions Request
		try {
		    CamtA0400203 result = apiInstance.getChangedPaymentTransactionsPost(laUApplicationID, laUVersion, laUCallTime, laURequestNonce, laUSigned, laUSignature, xApiKey, requestBody);
		    System.out.println(result);
		} catch (ApiException e) {
		    System.err.println("Exception when calling GetChangedPaymentTransactionsApi#getChangedPaymentTransactionsPost");
		    e.printStackTrace();
		}
        // TODO: test validations
    }
    
    
    @Test
	public void ValidateBaseUrl() {

		GetChangedPaymentTransactionsApi api = new GetChangedPaymentTransactionsApi();
		api.getApiClient().setBasePath("https://sandbox.swiftlab-api-developer.com/swift-apitracker-pilot/v2");
		String base = api.getApiClient().getBasePath();
		Assert.assertEquals(base, "https://sandbox.swiftlab-api-developer.com/swift-apitracker-pilot/v2");
		System.out.println("Passed Test ValidateBaseUrl");
	}

	@Test
	public void getChangedPaymentTra29nsactionsPostWithHttpInfoShouldReturnResponse() throws ApiException {
		CamtA0400103 requestBody = new CamtA0400103();
		requestBody.setGetChangedPaymentTransactionsRequest(new GetChangedPaymentTransactionsRequest());
		List<String> myInstitution = asList("CCLABEB0");
		requestBody.getGetChangedPaymentTransactionsRequest().setMyInstitution(myInstitution);
		requestBody.getGetChangedPaymentTransactionsRequest().setStartTime("2017-05-25T09:24:41.174Z");
		GetChangedPaymentTransactionsApi test = mock(GetChangedPaymentTransactionsApi.class);
		ApiResponse<CamtA0400203> response = mock(ApiResponse.class);

		when(test.getChangedPaymentTransactionsPostWithHttpInfo("001", "1.0", "2018-03-23T15:56:26.728Z",
				"e802ab96-bb3a-4965-9139-5214b9f0f074",
				"(ApplAPIKey=yVGhKiV5z1ZGdaqFXoZ8AiSA9n5CrY6B),(RBACRole=[FullViewer/Scope/cclabeb0])",
				"U1khA8h9Lm1PqzB99fG6uw", "", requestBody)).thenReturn(response);

		Assert.assertEquals(test.getChangedPaymentTransactionsPostWithHttpInfo("001", "1.0", "2018-03-23T15:56:26.728Z",
				"e802ab96-bb3a-4965-9139-5214b9f0f074",
				"(ApplAPIKey=yVGhKiV5z1ZGdaqFXoZ8AiSA9n5CrY6B),(RBACRole=[FullViewer/Scope/cclabeb0])",
				"U1khA8h9Lm1PqzB99fG6uw", "", requestBody), response);
		System.out.println("Passed Test getChangedPaymentTransactionsPostWithHttpInfoShouldReturnResponse");
	}

	@Test
	public void getChangedPaymentTransactionsPostShouldReturnData() throws ApiException {
		CamtA0400103 requestBody = new CamtA0400103();
		requestBody.setGetChangedPaymentTransactionsRequest(new GetChangedPaymentTransactionsRequest());
		List<String> myInstitution = asList("CCLABEB0");
		requestBody.getGetChangedPaymentTransactionsRequest().setMyInstitution(myInstitution);
		requestBody.getGetChangedPaymentTransactionsRequest().setStartTime("2017-05-25T09:24:41.174Z");
		GetChangedPaymentTransactionsApi test = mock(GetChangedPaymentTransactionsApi.class);

		CamtA0400203 response = mock(CamtA0400203.class);

		when(test.getChangedPaymentTransactionsPost("001", "1.0", "2018-03-23T15:56:26.728Z",
				"e802ab96-bb3a-4965-9139-5214b9f0f074",
				"(ApplAPIKey=yVGhKiV5z1ZGdaqFXoZ8AiSA9n5CrY6B),(RBACRole=[FullViewer/Scope/cclabeb0])",
				"U1khA8h9Lm1PqzB99fG6uw", "", requestBody)).thenReturn(response);

		Assert.assertEquals(test.getChangedPaymentTransactionsPost("001", "1.0", "2018-03-23T15:56:26.728Z",
				"e802ab96-bb3a-4965-9139-5214b9f0f074",
				"(ApplAPIKey=yVGhKiV5z1ZGdaqFXoZ8AiSA9n5CrY6B),(RBACRole=[FullViewer/Scope/cclabeb0])",
				"U1khA8h9Lm1PqzB99fG6uw", "", requestBody), response);
		System.out.println("Passed Test getChangedPaymentTransactionsPostShouldReturnData");

	}

    
}
